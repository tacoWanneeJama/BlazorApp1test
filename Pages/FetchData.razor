@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <DataGrid TItem="WeatherForecast" Data="forecasts" FixedHeader=true>
        <DataGridColumns>
            <DataGridDateColumn Field="@(nameof(WeatherForecast.Date))" Caption="Date"></DataGridDateColumn>
            <DataGridColumn Field="@(nameof(WeatherForecast.TemperatureC))" Caption="Temp"></DataGridColumn>
            <DataGridColumn Field="@(nameof(WeatherForecast.Summary))" Caption="Summary"></DataGridColumn>
        </DataGridColumns>
    </DataGrid>
}

@code {
    private List<WeatherForecast>? forecasts = new List<WeatherForecast>();

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<List<WeatherForecast>>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);

        public List<WeatherForecast> SubRows { get; set; }
    }
}
